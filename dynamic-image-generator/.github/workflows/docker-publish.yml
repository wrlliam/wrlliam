name: Docker

on:
  schedule:
    - cron: '26 6 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Docker if not available
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log into Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Run custom Docker build command
      - name: Build Docker image with custom command
        run: |
          docker build . \
            -f ./dynamic-image-generator/.nixpacks/Dockerfile \
            -t dynamic_image_generator \
            --build-arg CI=true \
            --build-arg NIXPACKS_METADATA=node \
            --build-arg NODE_ENV=production \
            --build-arg NPM_CONFIG_PRODUCTION=false
          
      # Push the image to the registry (only if not a PR)
      - name: Push Docker image
        if: github.event_name != 'pull_request'
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Sign the published Docker image (optional)
      - name: Sign the Docker image
        if: github.event_name != 'pull_request'
        env:
          TAGS: dynamic_image_generator:latest
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
